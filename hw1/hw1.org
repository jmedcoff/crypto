#+TITLE: Simple Cipher Decryption
#+AUTHOR: Jason Medcoff
#+DATE: 8 January 2018

#+LaTeX_HEADER: \usepackage{geometry}
#+LaTeX_HEADER: \geometry{a4paper}
#+OPTIONS: toc:nil

** Frequency Analysis on Single Characters

My task was to decrypt the file ~HW3.txt.e~, developing necessary tools
along the way. I began by assuming the simplest case; the file was a
monoalphabetic cipher. Upon first examination of the file, I noticed
repetition of several one, two, and three letter words. Deciding that
a frequency table would shine some light on the nature of the
encryption, I wrote the following.

#+BEGIN_SRC python :session
from collections import defaultdict
def frequency_table(s):
    """Gives the frequency table for characters in an input string"""
    length = len(s)
    f_table = defaultdict(lambda: 0)
    for character in s:
        f_table[character] += 1
    return {k:v/length for (k,v) in f_table.items()} # Won't work in python 2.x!
#+END_SRC

#+RESULTS:

#+BEGIN_SRC python :session :exports none
string1 = "the quick brown fox jumps over the lazy dog"
frequency_table(string1)
#+END_SRC

#+RESULTS:
| a | : | 0.023255813953488372 | r | : | 0.046511627906976744 | g | : | 0.023255813953488372 | u | : | 0.046511627906976744 | o | : | 0.09302325581395349 | h | : | 0.046511627906976744 | n | : | 0.023255813953488372 | b | : | 0.023255813953488372 | m | : | 0.023255813953488372 | v | : | 0.023255813953488372 | y | : | 0.023255813953488372 | j | : | 0.023255813953488372 | f | : | 0.023255813953488372 |   | : | 0.18604651162790697 | z | : | 0.023255813953488372 | c | : | 0.023255813953488372 | e | : | 0.06976744186046512 | s | : | 0.023255813953488372 | t | : | 0.046511627906976744 | p | : | 0.023255813953488372 | l | : | 0.023255813953488372 | i | : | 0.023255813953488372 | d | : | 0.023255813953488372 | k | : | 0.023255813953488372 | q | : | 0.023255813953488372 | x | : | 0.023255813953488372 | w | : | 0.023255813953488372 |

This code was to produce the frequency table of characters found in
the input text. I followed with a helper function to sort the table on
the frequency, and applied the code to the ciphertext itself. The
results are shown in Table 1. (From now on, lowercase letters are
ciphertext and uppercase letters denote plaintext.)

#+BEGIN_SRC python :session :results output :exports none
from operator import itemgetter
def sort_by_value(dt):
    """Sorts a dictionary by its values, in reverse order"""
    return sorted(dt.items(), key=itemgetter(1), reverse=True)
#+END_SRC

#+RESULTS:

#+BEGIN_SRC python :session :exports results
with open("./HW-3.txt.e") as f:
    sort_by_value(frequency_table(f.read().lower().replace(" ", "")))
#+END_SRC

#+CAPTION: Frequency table for ciphertext
#+RESULTS:
|    |                        |
| r  |    0.11394781302797072 |
| g  |    0.07828045804392716 |
| n  |    0.07809273512295851 |
| b  |    0.07584006007133472 |
| a  |    0.06269945560352919 |
| v  |    0.06251173268256054 |
| u  |    0.05819410550028158 |
| f  |   0.056129153369626435 |
| e  |    0.05519053876478318 |
| q  |    0.03679369250985545 |
| z  |    0.03379012577435705 |
| y  |    0.03341467993241975 |
| h  |    0.02703210061948564 |
| \n |   0.026468931856579687 |
| p  |   0.024216256804955885 |
| l  |   0.023465365121081282 |
| s  |    0.01989862962267693 |
| j  |    0.01952318378073963 |
| ,  |   0.016519617045241224 |
| o  |   0.016144171203303925 |
| t  |   0.015393279519429322 |
| c  |   0.014830110756523372 |
| .  |   0.011451098179087666 |
| i  |   0.011451098179087666 |
| x  |   0.007696639759714661 |
| “  |   0.004880795945184907 |
| ”  |   0.004880795945184907 |
| -  |  0.0022526750516238033 |
| d  |  0.0016895062887178525 |
| w  |  0.0015017833677492022 |
| k  |  0.0011263375258119017 |
| ’  |  0.0009386146048432514 |
| *  |  0.0009386146048432514 |
| m  |  0.0007508916838746011 |
| ?  |  0.0005631687629059508 |
| !  |  0.0005631687629059508 |
| —  | 0.00037544584193730055 |
| _  | 0.00037544584193730055 |
| ;  | 0.00018772292096865028 |

** Frequency Analysis on Substrings
Immediately noticeable is the high probability of the letter 'r', with
almost ten percent. I then wanted to consider some of the repeated
three letter words I had seen. I generalized the single-character
frequency table to handle any substrings of length ~n~. After removing
spaces from the ciphertext, I obtained the table for substrings of
length three (Table 2).

#+BEGIN_SRC python :session
def n_frequency_table(s, n):
    """Gives a general frequency table of substrings of length n"""
    length = len(s)
    f_table = defaultdict(lambda:0)
    for i in range(length + 1 - n):
        f_table[s[i:i+n]] += 1
    return {k:v/length for (k,v) in f_table.items()}

#+END_SRC

#+RESULTS:

#+BEGIN_SRC python :session :exports results
sort_by_value(n_frequency_table(st.replace(" ", ""), 3))

#+END_SRC

#+CAPTION: Frequency table of length-3 substrings
#+RESULTS:
|       |                       |
| gur   |   0.01576872536136662 |
| naq   | 0.0071334709968087105 |
| vat   |  0.006570302233902759 |
| lbh   |  0.005631687629059508 |
| gun   |  0.005256241787122208 |
| uvf   |  0.004505350103247607 |
| ung   |  0.004505350103247607 |
| nir   |  0.004317627182278956 |
| ure   |  0.004317627182278956 |
| rag   |  0.003942181340341655 |
| ire   | 0.0035667354984043552 |
| \n\n“ | 0.0035667354984043552 |
| uni   |  0.003379012577435705 |
| abg   |  0.003379012577435705 |
| vba   | 0.0031912896564670547 |
| rfg   | 0.0030035667354984044 |
| ,na   |  0.002815843814529754 |
| ”\n\n |  0.002815843814529754 |
| zna   |  0.002815843814529754 |
| rer   |  0.002815843814529754 |
| .”\n  |  0.002628120893561104 |
| qgu   |  0.002628120893561104 |
| ...   |                   ... |

Noting the frequency of the letters 'g' and 'r' and the three letter
word 'gur', I began assuming that 'gur' translated to 'THE' in
plaintext. I also saw that 'n' was the most common single letter word,
and so assumed it to correspond to 'A'. With these letters translated,
I noticed some other likely words, such as 'j' corresponding to 'W' to
create the word 'WHAT', and 'e' corresponding to 'R' to create
'THREE'. After some such substitution, I ran the code on the text to
obtain a partial translation; an excerpt follows below.

#+BEGIN_SRC python :session :exports both
from re import sub
with open("./HW-3.txt.e") as f:
    st = f.read().lower()

st2 = sub("j", "W", sub("y", "L", sub("e", "R", sub("n", "A", sub("g", "T", st)))))
sub("u", "H", sub("r", "E", sub("f", "S", sub("v", "I", st2))))
#+END_SRC

#+RESULTS:
#+begin_example
“WHAT A WbzAa—bH, WHAT A WbzAa!” pRIEq THE xIat bs obHEzIA, WHEa WE
HAq ALL THREE REAq THIS EcISTLE. “qIq I abT TELL lbh HbW dhIpx Aaq
RESbLhTE SHE WAS? WbhLq SHE abT HAiE zAqE Aa AqzIRAoLE dhEEa? IS IT abT
A cITl THAT SHE WAS abT ba zl LEiEL?”

“sRbz WHAT I HAiE SEEa bs THE LAql SHE SEEzS IaqEEq Tb oE ba A iERl
qIssEREaT LEiEL Tb lbhR zAwESTl,” SAIq HbLzES, pbLqLl. “I Az SbRRl
THAT I HAiE abT oEEa AoLE Tb oRIat lbhR zAwESTl’S ohSIaESS Tb A zbRE
ShppESSshL pbapLhSIba.”
#+end_example

** Further Substitutions
At this point, it was clear that this ciphertext was indeed
monoalphabetic. So, I continued to utilize knowledge of common words
in English to complete the cipher. Upon finding the first five to ten
letters, the rest came very easily. The code used to fully translate
the text follows; ~reverse_cipher~ is a dict mapping ciphertext
letters to plaintext letters. The full decrypted text is found in the
file ~HW-3.txt~.

#+BEGIN_SRC python :session :exports none
reverse_cipher = {"e":"R",
                  "n":"A",
                  "j":"W",
                  "y":"L",
                  "g":"T",
                  "u":"H",
                  "r":"E",
                  "f":"S",
                  "v":"I",
                  "a":"N",
                  "b":"O",
                  "z":"M",
                  "l":"Y",
                  "i":"V",
                  "z":"M",
                  "p":"C",
                  "h":"U",
                  "q":"D",
                  "s":"F",
                  "c":"P",
                  "o":"B",
                  "t":"G",
                  "w":"J",
                  "x":"K",
                  "m":"Z",
                  "d":"Q",
                  "k":"X"}
#+END_SRC

#+BEGIN_SRC python :session :exports code
strlist = []
for char in st:
    if char in reverse_cipher:
        strlist.append(reverse_cipher[char])
    else:
        strlist.append(char)

''.join(strlist)
#+END_SRC

#+RESULTS:
#+begin_example
“WHAT A WOMAN—OH, WHAT A WOMAN!” CRIED THE KING OF BOHEMIA, WHEN WE
HAD ALL THREE READ THIS EPISTLE. “DID I NOT TELL YOU HOW QUICK AND
RESOLUTE SHE WAS? WOULD SHE NOT HAVE MADE AN ADMIRABLE QUEEN? IS IT NOT
A PITY THAT SHE WAS NOT ON MY LEVEL?”

“FROM WHAT I HAVE SEEN OF THE LADY SHE SEEMS INDEED TO BE ON A VERY
DIFFERENT LEVEL TO YOUR MAJESTY,” SAID HOLMES, COLDLY. “I AM SORRY
THAT I HAVE NOT BEEN ABLE TO BRING YOUR MAJESTY’S BUSINESS TO A MORE
SUCCESSFUL CONCLUSION.”

“ON THE CONTRARY, MY DEAR SIR,” CRIED THE KING; “NOTHING COULD BE MORE
SUCCESSFUL. I KNOW THAT HER WORD IS INVIOLATE. THE PHOTOGRAPH IS NOW AS
SAFE AS IF IT WERE IN THE FIRE.”

“I AM GLAD TO HEAR YOUR MAJESTY SAY SO.”

“I AM IMMENSELY INDEBTED TO YOU. PRAY TELL ME IN WHAT WAY I CAN REWARD
YOU. THIS RING—” HE SLIPPED AN EMERALD SNAKE RING FROM HIS FINGER AND
HELD IT OUT UPON THE PALM OF HIS HAND.

“YOUR MAJESTY HAS SOMETHING WHICH I SHOULD VALUE EVEN MORE HIGHLY,”
SAID HOLMES.

“YOU HAVE BUT TO NAME IT.”

“THIS PHOTOGRAPH!”

THE KING STARED AT HIM IN AMAZEMENT.

“IRENE’S PHOTOGRAPH!” HE CRIED. “CERTAINLY, IF YOU WISH IT.”

“I THANK YOUR MAJESTY. THEN THERE IS NO MORE TO BE DONE IN THE MATTER.
I HAVE THE HONOR TO WISH YOU A VERY GOOD-MORNING.” HE BOWED, AND,
TURNING AWAY WITHOUT OBSERVING THE HAND WHICH THE KING HAD STRETCHED
OUT TO HIM, HE SET OFF IN MY COMPANY FOR HIS CHAMBERS.

       *       *       *       *       *

AND THAT WAS HOW A GREAT SCANDAL THREATENED TO AFFECT THE KINGDOM OF
BOHEMIA, AND HOW THE BEST PLANS OF MR. SHERLOCK HOLMES WERE BEATEN BY
A WOMAN’S WIT. HE USED TO MAKE MERRY OVER THE CLEVERNESS OF WOMEN, BUT
I HAVE NOT HEARD HIM DO IT OF LATE. AND WHEN HE SPEAKS OF IRENE ADLER,
OR WHEN HE REFERS TO HER PHOTOGRAPH, IT IS ALWAYS UNDER THE HONORABLE
TITLE OF _THE_ WOMAN.




ADVENTURE II

THE RED-HEADED LEAGUE


I HAD CALLED UPON MY FRIEND, MR. SHERLOCK HOLMES, ONE DAY IN THE AUTUMN
OF LAST YEAR, AND FOUND HIM IN DEEP CONVERSATION WITH A VERY STOUT,
FLORID-FACED, ELDERLY GENTLEMAN, WITH FIERY RED HAIR. WITH AN APOLOGY
FOR MY INTRUSION, I WAS ABOUT TO WITHDRAW, WHEN HOLMES PULLED ME
ABRUPTLY INTO THE ROOM AND CLOSED THE DOOR BEHIND ME.

“YOU COULD NOT POSSIBLY HAVE COME AT A BETTER TIME, MY DEAR WATSON,” HE
SAID, CORDIALLY.

“I WAS AFRAID THAT YOU WERE ENGAGED.”

“SO I AM. VERY MUCH SO.”

“THEN I CAN WAIT IN THE NEXT ROOM.”

“NOT AT ALL. THIS GENTLEMAN, MR. WILSON, HAS BEEN MY PARTNER AND HELPER
IN MANY OF MY MOST SUCCESSFUL CASES, AND I HAVE NO DOUBT THAT HE WILL
BE OF THE UTMOST USE TO ME IN YOURS ALSO.”

THE STOUT GENTLEMAN HALF-ROSE FROM HIS CHAIR AND GAVE A BOB OF
GREETING, WITH A QUICK, LITTLE, QUESTIONING GLANCE FROM HIS SMALL,
FAT-ENCIRCLED EYES.

“TRY THE SETTEE,” SAID HOLMES, RELAPSING INTO HIS ARM-CHAIR AND PUTTING
HIS FINGER-TIPS TOGETHER, AS WAS HIS CUSTOM WHEN IN JUDICIAL MOODS. “I
KNOW, MY DEAR WATSON, THAT YOU SHARE MY LOVE OF ALL THAT IS BIZARRE AND
OUTSIDE THE CONVENTIONS AND HUMDRUM ROUTINE OF EVERY-DAY LIFE. YOU HAVE
SHOWN YOUR RELISH FOR IT BY THE ENTHUSIASM WHICH HAS PROMPTED YOU TO
CHRONICLE, AND, IF YOU WILL EXCUSE MY SAYING SO, SOMEWHAT TO EMBELLISH
SO MANY OF MY OWN LITTLE ADVENTURES.”

“YOUR CASES HAVE INDEED BEEN OF THE GREATEST INTEREST TO ME,” I
OBSERVED.

“YOU WILL REMEMBER THAT I REMARKED THE OTHER DAY, JUST BEFORE WE WENT
INTO THE VERY SIMPLE PROBLEM PRESENTED BY MISS MARY SUTHERLAND, THAT
FOR STRANGE EFFECTS AND EXTRAORDINARY COMBINATIONS WE MUST GO TO
LIFE ITSELF, WHICH IS ALWAYS FAR MORE DARING THAN ANY EFFORT OF THE
IMAGINATION.”

“A PROPOSITION WHICH I TOOK THE LIBERTY OF DOUBTING.”

“YOU DID, DOCTOR, BUT NONE THE LESS YOU MUST COME ROUND TO MY VIEW,
FOR OTHERWISE I SHALL KEEP ON PILING FACT UPON FACT ON YOU, UNTIL YOUR
REASON BREAKS DOWN UNDER THEM AND ACKNOWLEDGES ME TO BE RIGHT. NOW, MR.
JABEZ WILSON HERE HAS BEEN GOOD ENOUGH TO CALL UPON ME THIS MORNING,
AND TO BEGIN A NARRATIVE WHICH PROMISES TO BE ONE OF THE MOST SINGULAR
WHICH I HAVE LISTENED TO FOR SOME TIME. YOU HAVE HEARD ME REMARK THAT
THE STRANGEST AND MOST UNIQUE THINGS ARE VERY OFTEN CONNECTED NOT WITH
THE LARGER BUT WITH THE SMALLER CRIMES, AND OCCASIONALLY, INDEED, WHERE
THERE IS ROOM FOR DOUBT WHETHER ANY POSITIVE CRIME HAS BEEN COMMITTED.
AS FAR AS I HAVE HEARD IT IS IMPOSSIBLE FOR ME TO SAY WHETHER THE
PRESENT CASE IS AN INSTANCE OF CRIME OR NOT, BUT THE COURSE OF EVENTS
IS CERTAINLY AMONG THE MOST SINGULAR THAT I HAVE EVER LISTENED TO.
PERHAPS, MR. WILSON, YOU WOULD HAVE THE GREAT KINDNESS TO RECOMMENCE
YOUR NARRATIVE. I ASK YOU, NOT MERELY BECAUSE MY FRIEND DR. WATSON HAS
NOT HEARD THE OPENING PART, BUT ALSO BECAUSE THE PECULIAR NATURE OF THE
STORY MAKES ME ANXIOUS TO HAVE EVERY POSSIBLE DETAIL FROM YOUR LIPS.
AS A RULE, WHEN I HAVE HEARD SOME SLIGHT INDICATION OF THE COURSE OF
EVENTS, I AM ABLE TO GUIDE MYSELF BY THE THOUSANDS OF OTHER SIMILAR
CASES WHICH OCCUR TO MY MEMORY. IN THE PRESENT INSTANCE I AM FORCED TO
ADMIT THAT THE FACTS ARE, TO THE BEST OF MY BELIEF, UNIQUE.”

THE PORTLY CLIENT PUFFED OUT HIS CHEST WITH AN APPEARANCE OF SOME
LITTLE PRIDE, AND PULLED A DIRTY AND WRINKLED NEWSPAPER FROM THE INSIDE
POCKET OF HIS GREAT-COAT. AS HE GLANCED DOWN THE ADVERTISEMENT COLUMN,
WITH HIS HEAD THRUST FORWARD, AND THE PAPER FLATTENED OUT UPON HIS
KNEE, I TOOK A GOOD LOOK AT THE MAN, AND ENDEAVORED, AFTER THE FASHION
OF MY COMPANION, TO READ THE INDICATIONS WHICH MIGHT BE PRESENTED BY
HIS DRESS OR APPEARANCE.

I DID NOT GAIN VERY MUCH, HOWEVER, BY MY INSPECTION. OUR VISITOR BORE
EVERY MARK OF BEING AN AVERAGE COMMONPLACE BRITISH TRADESMAN, OBESE,
POMPOUS, AND SLOW. HE WORE RATHER BAGGY GRAY SHEPHERD’S CHECK TROUSERS,
A NOT OVER-CLEAN BLACK FROCK-COAT, UNBUTTONED IN THE FRONT, AND A DRAB
WAISTCOAT WITH A HEAVY BRASSY ALBERT CHAIN, AND A SQUARE PIERCED BIT OF
METAL DANGLING DOWN AS AN ORNAMENT. A FRAYED TOP-HAT AND A FADED BROWN
OVERCOAT WITH A WRINKLED VELVET COLLAR LAY UPON A CHAIR BESIDE HIM.
ALTOGETHER, LOOK AS I WOULD, THERE WAS NOTHING REMARKABLE ABOUT THE MAN
SAVE HIS BLAZING RED HEAD, AND THE EXPRESSION OF EXTREME CHAGRIN AND
DISCONTENT UPON HIS FEATURES.

SHERLOCK HOLMES’S QUICK EYE TOOK IN MY OCCUPATION, AND HE SHOOK HIS
HEAD WITH A SMILE AS HE NOTICED MY QUESTIONING GLANCES. “BEYOND THE
OBVIOUS FACTS THAT HE HAS AT SOME TIME DONE MANUAL LABOR, THAT HE TAKES
SNUFF, THAT HE IS A FREEMASON, THAT HE HAS BEEN IN CHINA, AND THAT HE
HAS DONE A CONSIDERABLE AMOUNT OF WRITING LATELY, I CAN DEDUCE NOTHING
ELSE.”
#+end_example

#+BEGIN_SRC python :session :exports results
sorted(reverse_cipher.items(), key=itemgetter(1))
#+END_SRC

#+CAPTION: Cipher used
#+RESULTS:
|           |            |
| plaintext | ciphertext |
| A         | n          |
| B         | o          |
| C         | p          |
| D         | q          |
| E         | r          |
| F         | s          |
| G         | t          |
| H         | u          |
| I         | v          |
| J         | w          |
| K         | x          |
| L         | y          |
| M         | z          |
| N         | a          |
| O         | b          |
| P         | c          |
| Q         | d          |
| R         | e          |
| S         | f          |
| T         | g          |
| U         | h          |
| V         | i          |
| W         | j          |
| X         | k          |
| Y         | l          |
| Z         | m          |

